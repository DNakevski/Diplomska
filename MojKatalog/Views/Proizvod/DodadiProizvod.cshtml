@model MojKatalog.Models.ViewModels.ProizvodViewModel

@{
    ViewBag.Title = "Додади Производ";
    List<MojKatalog.Models.ViewModels.ViewBreadcrumb> breadcrumb = ViewBag.BreadCrumb;
    int breadcrumbLength = breadcrumb.ToList().Count;
}

<input type="hidden" id="activeLink" value="proizvodLink" />
<h3 class="page-title">Додади Производ <small>креирање на нов производ</small></h3>
<ul class="breadcrumb">
    <li class="active"><a href="@Url.Action("Index", "Proizvod")">Производи</a></li>
    @if (breadcrumbLength >= 3)
    {
        <li class="active"><a href="@Url.Action("PregledajProizvodi", "Proizvod", new { id = breadcrumb[2].Id })">...</a></li>
        for (int i = 1; i >= 0; i--)
        {
        <li class="active"><a href="@Url.Action("PregledajProizvodi", "Proizvod", new { id = breadcrumb[i].Id })">@breadcrumb[i].Name</a></li>
        }
    }
    else
    {
        for (int i = breadcrumbLength - 1; i >= 0; i--)
        {
        <li class="active"><a href="@Url.Action("PregledajProizvodi", "Proizvod", new { id = breadcrumb[i].Id })">@breadcrumb[i].Name</a></li>
        }
    }
    <li class="active">Додади Производ</li>
</ul>

<div class="well bs-component">
    @using (Html.BeginForm("DodadiProizvod", "Proizvod", new { id = @ViewBag.IdKategorija }, FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Каталог</legend>
            @Html.HiddenFor(model => model.IdKategorii, new { Value = @ViewBag.IdKategorija })
             @Html.HiddenFor(model => model.IdProizvodi)
            <div class="form-group">
                @Html.LabelFor(model => model.NazivNaProizvod, new { @class = "col-lg-2 col-md-3 control-label" })
                <div class="col-lg-10">
                    @Html.TextBoxFor(model => model.NazivNaProizvod, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NazivNaProizvod)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Specifikacija, new { @class = "col-lg-2 col-md-3 control-label" })
                <div class="col-lg-10">
                    @Html.TextAreaFor(model => model.Specifikacija, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Specifikacija)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cena, new { @class = "col-lg-2 col-md-3 control-label" })
                <div class="col-lg-10">
                    @Html.TextBoxFor(model => model.Cena, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Cena)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Popust, new { @class = "col-lg-2 col-md-3 control-label" })
                <div class="col-lg-10">
                    <div class="input-group">
                        <span class="input-group-addon">%</span>
                        @Html.TextBoxFor(model => model.Popust, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Popust)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SlikaNaProizvod, new { @class = "col-lg-2 col-md-3 control-label" })
                <div class="col-lg-10">
                    @*Begin Input File*@
                    <div class="input-group">
                        <span class="input-group-btn">
                            <span class="btn btn-primary btn-file">Browse…
                                <input type="file" name="file" multiple="">
                            </span>
                        </span>
                        <input type="text" class="form-control" readonly="">
                    </div>
                    @*End Input File*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Dostapnost, new { @class = "col-lg-2 col-md-3 control-label" })
                <div class="col-lg-10">
                    @Html.DropDownListFor(model => model.Dostapnost, new List<SelectListItem>() { new SelectListItem() { Text = "Да", Value = "True" }, new SelectListItem() { Text = "Не", Value = "False" } }, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Dostapnost)
                </div>
            </div>
            <br />
            <div class="form-group">
                <div class="col-lg-10 col-lg-offset-1 col-md-offset-2">
                    <button type="submit" class="btn btn-primary">Креирај</button>
                </div>
            </div>
        </fieldset>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).on('change', '.btn-file :file', function () {
            var input = $(this),
                numFiles = input.get(0).files ? input.get(0).files.length : 1,
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [numFiles, label]);
        });

        $(document).ready(function () {
            $('.btn-file :file').on('fileselect', function (event, numFiles, label) {

                var input = $(this).parents('.input-group').find(':text'),
                    log = numFiles > 1 ? numFiles + ' files selected' : label;

                if (input.length) {
                    input.val(log);
                } else {
                    if (log) alert(log);
                }

            });
        });
    </script>
}






@*@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Производ</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.IdProizvodi)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IdProizvodi)
            @Html.ValidationMessageFor(model => model.IdProizvodi)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NazivNaProizvod)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NazivNaProizvod)
            @Html.ValidationMessageFor(model => model.NazivNaProizvod)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Specifikacija)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Specifikacija)
            @Html.ValidationMessageFor(model => model.Specifikacija)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Cena)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Cena)
            @Html.ValidationMessageFor(model => model.Cena)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Popust)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Popust)
            @Html.ValidationMessageFor(model => model.Popust)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SlikaNaProizvod)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SlikaNaProizvod)
            @Html.ValidationMessageFor(model => model.SlikaNaProizvod)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Dostapnost)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Dostapnost)
            @Html.ValidationMessageFor(model => model.Dostapnost)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IdKategorii)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IdKategorii)
            @Html.ValidationMessageFor(model => model.IdKategorii)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
*@
